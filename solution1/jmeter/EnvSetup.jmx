<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">9443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="hybridRole" elementType="Argument">
            <stringProp name="Argument.name">hybridRole</stringProp>
            <stringProp name="Argument.value">hybridRole</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="publisherRole" elementType="Argument">
            <stringProp name="Argument.name">publisherRole</stringProp>
            <stringProp name="Argument.value">publisherRole</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="subscriberRole" elementType="Argument">
            <stringProp name="Argument.name">subscriberRole</stringProp>
            <stringProp name="Argument.value">subscriberRole</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create Tenants" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515131057000</longProp>
        <longProp name="ThreadGroup.end_time">1515131057000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="tenantPassword" elementType="Argument">
              <stringProp name="Argument.name">tenantPassword</stringProp>
              <stringProp name="Argument.value">jane123</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="email" elementType="Argument">
              <stringProp name="Argument.name">email</stringProp>
              <stringProp name="Argument.value">test@gmail.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="adminBasicAuthHeader" elementType="Argument">
              <stringProp name="Argument.name">adminBasicAuthHeader</stringProp>
              <stringProp name="Argument.value">Basic QWRtaW5pc3RyYXRvcjpBZG1pbjEyMw==</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1973617166">tenantDomain</stringProp>
            <stringProp name="1861682373">tenantAdmin</stringProp>
            <stringProp name="411996694">tenantAdminFirstName</stringProp>
            <stringProp name="1597446694">tenantAdminLastName</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-2125510547">
              <stringProp name="740476897">finance.abc.com</stringProp>
              <stringProp name="3254574">jane</stringProp>
              <stringProp name="2301262">Jane</stringProp>
              <stringProp name="-210938856">Edwards</stringProp>
            </collectionProp>
            <collectionProp name="1185544633">
              <stringProp name="856134310">core.abc.com</stringProp>
              <stringProp name="3254574">jane</stringProp>
              <stringProp name="2301262">Jane</stringProp>
              <stringProp name="-210938856">Edwards</stringProp>
            </collectionProp>
            <collectionProp name="2130403649">
              <stringProp name="-603578893">operations.abc.com</stringProp>
              <stringProp name="3254574">jane</stringProp>
              <stringProp name="2301262">Jane</stringProp>
              <stringProp name="-210938856">Edwards</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">2</stringProp>
          <stringProp name="CounterConfig.end">5</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">tenantID</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Tenant" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://services.mgt.tenant.carbon.wso2.org&quot; xmlns:xsd=&quot;http://beans.common.stratos.carbon.wso2.org/xsd&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;ser:addTenant&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:tenantInfoBean&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:active&gt;true&lt;/xsd:active&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:admin&gt;${tenantAdmin}&lt;/xsd:admin&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:adminPassword&gt;${tenantPassword}&lt;/xsd:adminPassword&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:createdDate&gt;&lt;/xsd:createdDate&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:email&gt;${email}&lt;/xsd:email&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:firstname&gt;${tenantAdminFirstName}&lt;/xsd:firstname&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:lastname&gt;${tenantAdminLastName}&lt;/xsd:lastname&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:originatedService&gt;&lt;/xsd:originatedService&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:successKey&gt;&lt;/xsd:successKey&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:tenantDomain&gt;${tenantDomain}&lt;/xsd:tenantDomain&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:tenantId&gt;${tenantID}&lt;/xsd:tenantId&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:usagePlan&gt;&lt;/xsd:usagePlan&gt;&#xd;
         &lt;/ser:tenantInfoBean&gt;&#xd;
      &lt;/ser:addTenant&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/TenantMgtAdminService.TenantMgtAdminServiceHttpsSoap11Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">urn:addTenant</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic QWRtaW5pc3RyYXRvcjpBZG1pbjEyMw==</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49588">202</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">16</intProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Change tenant-conf.json" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515577053000</longProp>
        <longProp name="ThreadGroup.end_time">1515577053000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="1216985755">password</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1955180045">
              <stringProp name="146731693">Administrator</stringProp>
              <stringProp name="-904517469">Admin123</stringProp>
            </collectionProp>
            <collectionProp name="1307957775">
              <stringProp name="-1327510321">jane@finance.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
            </collectionProp>
            <collectionProp name="1419879324">
              <stringProp name="1798071416">jane@core.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
            </collectionProp>
            <collectionProp name="1643984820">
              <stringProp name="-999896507">jane@operations.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update tenant-conf.json" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;EnableMonetization&quot; : false,&#xd;
  &quot;IsUnlimitedTierPaid&quot; : false,&#xd;
  &quot;ExtensionHandlerPosition&quot;: &quot;bottom&quot;,&#xd;
  &quot;RESTAPIScopes&quot;: {&#xd;
    &quot;Scope&quot;: [&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:api_publish&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin,Internal/publisher,hybridRole,publisherRole&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:api_create&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin,Internal/creator,hybridRole&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:api_view&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin,Internal/publisher,Internal/creator,hybridRole,publisherRole&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:subscribe&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin,Internal/subscriber,subscriberRole,hybridRole&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:tier_view&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin,Internal/publisher,Internal/creator&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:tier_manage&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:bl_view&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:bl_manage&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:subscription_view&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin,Internal/creator&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:subscription_block&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin,Internal/creator&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:mediation_policy_view&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:mediation_policy_create&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;Name&quot;: &quot;apim:api_workflow&quot;,&#xd;
        &quot;Roles&quot;: &quot;admin&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
  &quot;NotificationsEnabled&quot;:&quot;false&quot;,&#xd;
  &quot;Notifications&quot;:[{&#xd;
    &quot;Type&quot;:&quot;new_api_version&quot;,&#xd;
    &quot;Notifiers&quot; :[{&#xd;
      &quot;Class&quot;:&quot;org.wso2.carbon.apimgt.impl.notification.NewAPIVersionEmailNotifier&quot;,&#xd;
      &quot;ClaimsRetrieverImplClass&quot;:&quot;org.wso2.carbon.apimgt.impl.token.DefaultClaimsRetriever&quot;,&#xd;
      &quot;Title&quot;: &quot;Version $2 of $1 Released&quot;,&#xd;
      &quot;Template&quot;: &quot; &lt;html&gt; &lt;body&gt; &lt;h3 style=\&quot;color:Black;\&quot;&gt;We’re happy to announce the arrival of the next major version $2 of $1 API which is now available in Our API Store.&lt;/h3&gt;&lt;a href=\&quot;https://localhost:9443/store\&quot;&gt;Click here to Visit WSO2 API Store&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;&quot;&#xd;
    }]&#xd;
  }&#xd;
  ],&#xd;
  &quot;DefaultRoles&quot; : {&#xd;
    &quot;PublisherRole&quot; : {&#xd;
      &quot;CreateOnTenantLoad&quot; : true,&#xd;
      &quot;RoleName&quot; : &quot;Internal/publisher&quot;&#xd;
    },&#xd;
    &quot;CreatorRole&quot; : {&#xd;
      &quot;CreateOnTenantLoad&quot; : true,&#xd;
      &quot;RoleName&quot; : &quot;Internal/creator&quot;&#xd;
    },&#xd;
    &quot;SubscriberRole&quot; : {&#xd;
      &quot;CreateOnTenantLoad&quot; : true&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/resource/1.0.0/artifact/_system/config/apimgt/applicationdata/tenant-conf.json</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${encoded_ClientCredentials}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Media-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">username,password</stringProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;

String forEncoding = vars.get(&quot;username&quot;) + &quot;:&quot; + vars.get(&quot;password&quot;);
log.info(&quot;Username: &quot; + vars.get(&quot;username&quot;));
log.info(&quot;Password: &quot; + vars.get(&quot;password&quot;));
byte[] encoded_ClientCredentials = Base64.encodeBase64(forEncoding.getBytes());
vars.put(&quot;encoded_ClientCredentials&quot;, new String(encoded_ClientCredentials));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create Hybrid Users in Tenants" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515141491000</longProp>
        <longProp name="ThreadGroup.end_time">1515141491000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-1194832105">username_to_create</stringProp>
            <stringProp name="1935462044">password_to_create</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="331609024">
              <stringProp name="-1327510321">jane@finance.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="-1736022792">tehybriduser</stringProp>
              <stringProp name="1325367464">hybird123</stringProp>
            </collectionProp>
            <collectionProp name="514035213">
              <stringProp name="1798071416">jane@core.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="-1736022792">tehybriduser</stringProp>
              <stringProp name="1325367464">hybird123</stringProp>
            </collectionProp>
            <collectionProp name="1131052069">
              <stringProp name="-999896507">jane@operations.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="-1736022792">tehybriduser</stringProp>
              <stringProp name="1325367464">hybird123</stringProp>
            </collectionProp>
            <collectionProp name="-458047426">
              <stringProp name="146731693">Administrator</stringProp>
              <stringProp name="-904517469">Admin123</stringProp>
              <stringProp name="-1736022792">tehybriduser</stringProp>
              <stringProp name="1325367464">hybird123</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://service.ws.um.carbon.wso2.org&quot; xmlns:xsd=&quot;http://common.mgt.user.carbon.wso2.org/xsd&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;ser:addUser&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:userName&gt;${username_to_create}&lt;/ser:userName&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:credential&gt;${password_to_create}&lt;/ser:credential&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:roleList&gt;&lt;/ser:roleList&gt;&#xd;
          &lt;ser:profileName&gt;default&lt;/ser:profileName&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:requirePasswordChange&gt;false&lt;/ser:requirePasswordChange&gt;&#xd;
      &lt;/ser:addUser&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">urn:addUser</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${encoded_ClientCredentials}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">username,password</stringProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;

String forEncoding = vars.get(&quot;username&quot;) + &quot;:&quot; + vars.get(&quot;password&quot;);
log.info(&quot;Username: &quot; + vars.get(&quot;username&quot;));
log.info(&quot;Password: &quot; + vars.get(&quot;password&quot;));
byte[] encoded_ClientCredentials = Base64.encodeBase64(forEncoding.getBytes());
vars.put(&quot;encoded_ClientCredentials&quot;, new String(encoded_ClientCredentials));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Hybrid Role" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://service.ws.um.carbon.wso2.org&quot; xmlns:xsd=&quot;http://dao.service.ws.um.carbon.wso2.org/xsd&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;ser:addRole&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:roleName&gt;${hybridRole}&lt;/ser:roleName&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:userList&gt;${username_to_create}&lt;/ser:userList&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/login&lt;/xsd:resourceId&gt;                 &#xd;
         &lt;/ser:permissions&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
          &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/manage/api&lt;/xsd:resourceId&gt;&#xd;
         &lt;/ser:permissions&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/configure/governance&lt;/xsd:resourceId&gt;                 &#xd;
         &lt;/ser:permissions&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
          &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/manage/resources/govern&lt;/xsd:resourceId&gt;&#xd;
         &lt;/ser:permissions&gt;&#xd;
      &lt;/ser:addRole&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">urn:addRole</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${encoded_ClientCredentials}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">username,password</stringProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;

String forEncoding = vars.get(&quot;username&quot;) + &quot;:&quot; + vars.get(&quot;password&quot;);
log.info(&quot;Username: &quot; + vars.get(&quot;username&quot;));
log.info(&quot;Password: &quot; + vars.get(&quot;password&quot;));
byte[] encoded_ClientCredentials = Base64.encodeBase64(forEncoding.getBytes());
vars.put(&quot;encoded_ClientCredentials&quot;, new String(encoded_ClientCredentials));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create Publisher Users in Tenants" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515141491000</longProp>
        <longProp name="ThreadGroup.end_time">1515141491000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-1194832105">username_to_create</stringProp>
            <stringProp name="1935462044">password_to_create</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="307483436">
              <stringProp name="-1327510321">jane@finance.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="1447404028">publisher</stringProp>
              <stringProp name="-977482219">pub123</stringProp>
            </collectionProp>
            <collectionProp name="489909625">
              <stringProp name="1798071416">jane@core.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="1447404028">publisher</stringProp>
              <stringProp name="-977482219">pub123</stringProp>
            </collectionProp>
            <collectionProp name="1106926481">
              <stringProp name="-999896507">jane@operations.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="1447404028">publisher</stringProp>
              <stringProp name="-977482219">pub123</stringProp>
            </collectionProp>
            <collectionProp name="-482173014">
              <stringProp name="146731693">Administrator</stringProp>
              <stringProp name="-904517469">Admin123</stringProp>
              <stringProp name="1447404028">publisher</stringProp>
              <stringProp name="-977482219">pub123</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://service.ws.um.carbon.wso2.org&quot; xmlns:xsd=&quot;http://common.mgt.user.carbon.wso2.org/xsd&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;ser:addUser&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:userName&gt;${username_to_create}&lt;/ser:userName&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:credential&gt;${password_to_create}&lt;/ser:credential&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:roleList&gt;&lt;/ser:roleList&gt;&#xd;
          &lt;ser:profileName&gt;default&lt;/ser:profileName&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:requirePasswordChange&gt;false&lt;/ser:requirePasswordChange&gt;&#xd;
      &lt;/ser:addUser&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">urn:addUser</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${encoded_ClientCredentials}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">username,password</stringProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;

String forEncoding = vars.get(&quot;username&quot;) + &quot;:&quot; + vars.get(&quot;password&quot;);
log.info(&quot;Username: &quot; + vars.get(&quot;username&quot;));
log.info(&quot;Password: &quot; + vars.get(&quot;password&quot;));
byte[] encoded_ClientCredentials = Base64.encodeBase64(forEncoding.getBytes());
vars.put(&quot;encoded_ClientCredentials&quot;, new String(encoded_ClientCredentials));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Publisher Role" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://service.ws.um.carbon.wso2.org&quot; xmlns:xsd=&quot;http://dao.service.ws.um.carbon.wso2.org/xsd&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;ser:addRole&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:roleName&gt;${publisherRole}&lt;/ser:roleName&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:userList&gt;${username_to_create}&lt;/ser:userList&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/login&lt;/xsd:resourceId&gt;                 &#xd;
         &lt;/ser:permissions&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
          &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/manage/api/publish&lt;/xsd:resourceId&gt;&#xd;
         &lt;/ser:permissions&gt;&#xd;
      &lt;/ser:addRole&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">urn:addRole</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${encoded_ClientCredentials}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">username,password</stringProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;

String forEncoding = vars.get(&quot;username&quot;) + &quot;:&quot; + vars.get(&quot;password&quot;);
log.info(&quot;Username: &quot; + vars.get(&quot;username&quot;));
log.info(&quot;Password: &quot; + vars.get(&quot;password&quot;));
byte[] encoded_ClientCredentials = Base64.encodeBase64(forEncoding.getBytes());
vars.put(&quot;encoded_ClientCredentials&quot;, new String(encoded_ClientCredentials));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create Subscriber Users in Tenants" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1515141491000</longProp>
        <longProp name="ThreadGroup.end_time">1515141491000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-265713450">username</stringProp>
            <stringProp name="1216985755">password</stringProp>
            <stringProp name="-1194832105">username_to_create</stringProp>
            <stringProp name="1935462044">password_to_create</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1906048825">
              <stringProp name="-1327510321">jane@finance.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="-1219769240">subscriber</stringProp>
              <stringProp name="-891594766">sub123</stringProp>
            </collectionProp>
            <collectionProp name="2088475014">
              <stringProp name="1798071416">jane@core.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="-1219769240">subscriber</stringProp>
              <stringProp name="-891594766">sub123</stringProp>
            </collectionProp>
            <collectionProp name="-1589475426">
              <stringProp name="-999896507">jane@operations.abc.com</stringProp>
              <stringProp name="-1827185084">jane123</stringProp>
              <stringProp name="-1219769240">subscriber</stringProp>
              <stringProp name="-891594766">sub123</stringProp>
            </collectionProp>
            <collectionProp name="1116392375">
              <stringProp name="146731693">Administrator</stringProp>
              <stringProp name="-904517469">Admin123</stringProp>
              <stringProp name="-1219769240">subscriber</stringProp>
              <stringProp name="-891594766">sub123</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://service.ws.um.carbon.wso2.org&quot; xmlns:xsd=&quot;http://common.mgt.user.carbon.wso2.org/xsd&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;ser:addUser&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:userName&gt;${username_to_create}&lt;/ser:userName&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:credential&gt;${password_to_create}&lt;/ser:credential&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:roleList&gt;&lt;/ser:roleList&gt;&#xd;
          &lt;ser:profileName&gt;default&lt;/ser:profileName&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:requirePasswordChange&gt;false&lt;/ser:requirePasswordChange&gt;&#xd;
      &lt;/ser:addUser&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">urn:addUser</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${encoded_ClientCredentials}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">username,password</stringProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;

String forEncoding = vars.get(&quot;username&quot;) + &quot;:&quot; + vars.get(&quot;password&quot;);
log.info(&quot;Username: &quot; + vars.get(&quot;username&quot;));
log.info(&quot;Password: &quot; + vars.get(&quot;password&quot;));
byte[] encoded_ClientCredentials = Base64.encodeBase64(forEncoding.getBytes());
vars.put(&quot;encoded_ClientCredentials&quot;, new String(encoded_ClientCredentials));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Subscriber Role" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ser=&quot;http://service.ws.um.carbon.wso2.org&quot; xmlns:xsd=&quot;http://dao.service.ws.um.carbon.wso2.org/xsd&quot;&gt;&#xd;
   &lt;soapenv:Header/&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;ser:addRole&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;ser:roleName&gt;${subscriberRole}&lt;/ser:roleName&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:userList&gt;${username_to_create}&lt;/ser:userList&gt;&#xd;
         &lt;!--Zero or more repetitions:--&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/login&lt;/xsd:resourceId&gt;                 &#xd;
         &lt;/ser:permissions&gt;&#xd;
         &lt;ser:permissions&gt;&#xd;
          &lt;xsd:action&gt;ui.execute&lt;/xsd:action&gt;&#xd;
            &lt;!--Optional:--&gt;&#xd;
            &lt;xsd:resourceId&gt;/permission/admin/manage/api/subscribe&lt;/xsd:resourceId&gt;&#xd;
         &lt;/ser:permissions&gt;&#xd;
      &lt;/ser:addRole&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/services/RemoteUserStoreManagerService.RemoteUserStoreManagerServiceHttpsSoap11Endpoint</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">urn:addRole</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${encoded_ClientCredentials}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49588">202</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">username,password</stringProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;

String forEncoding = vars.get(&quot;username&quot;) + &quot;:&quot; + vars.get(&quot;password&quot;);
log.info(&quot;Username: &quot; + vars.get(&quot;username&quot;));
log.info(&quot;Password: &quot; + vars.get(&quot;password&quot;));
byte[] encoded_ClientCredentials = Base64.encodeBase64(forEncoding.getBytes());
vars.put(&quot;encoded_ClientCredentials&quot;, new String(encoded_ClientCredentials));</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
